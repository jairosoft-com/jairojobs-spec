/* tslint:disable */
/* eslint-disable */
/**
 * Job Portal API
 * API for the JairoJobs.com job portal MVP.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@jairojobs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { JobJobType } from './JobJobType';
import {
    JobJobTypeFromJSON,
    JobJobTypeFromJSONTyped,
    JobJobTypeToJSON,
    JobJobTypeToJSONTyped,
} from './JobJobType';
import type { JobRemoteOption } from './JobRemoteOption';
import {
    JobRemoteOptionFromJSON,
    JobRemoteOptionFromJSONTyped,
    JobRemoteOptionToJSON,
    JobRemoteOptionToJSONTyped,
} from './JobRemoteOption';
import type { JobExperienceLevel } from './JobExperienceLevel';
import {
    JobExperienceLevelFromJSON,
    JobExperienceLevelFromJSONTyped,
    JobExperienceLevelToJSON,
    JobExperienceLevelToJSONTyped,
} from './JobExperienceLevel';
import type { JobSalary } from './JobSalary';
import {
    JobSalaryFromJSON,
    JobSalaryFromJSONTyped,
    JobSalaryToJSON,
    JobSalaryToJSONTyped,
} from './JobSalary';

/**
 * Detailed information about a job posting.
 * @export
 * @interface JobDetail
 */
export interface JobDetail {
    /**
     * Unique identifier for the job.
     * @type {string}
     * @memberof JobDetail
     */
    id?: string;
    /**
     * The title of the job.
     * @type {string}
     * @memberof JobDetail
     */
    title?: string;
    /**
     * The name of the company posting the job.
     * @type {string}
     * @memberof JobDetail
     */
    company?: string;
    /**
     * Unique identifier for the company.
     * @type {string}
     * @memberof JobDetail
     */
    companyId?: string;
    /**
     * URL to the company's logo.
     * @type {string}
     * @memberof JobDetail
     */
    companyLogo?: string;
    /**
     * The location of the job.
     * @type {string}
     * @memberof JobDetail
     */
    location?: string;
    /**
     * 
     * @type {JobJobType}
     * @memberof JobDetail
     */
    type?: JobJobType;
    /**
     * 
     * @type {JobExperienceLevel}
     * @memberof JobDetail
     */
    experienceLevel?: JobExperienceLevel;
    /**
     * 
     * @type {JobRemoteOption}
     * @memberof JobDetail
     */
    remoteOption?: JobRemoteOption;
    /**
     * 
     * @type {JobSalary}
     * @memberof JobDetail
     */
    salary?: JobSalary;
    /**
     * The full description of the job.
     * @type {string}
     * @memberof JobDetail
     */
    description?: string;
    /**
     * List of requirements for the job.
     * @type {Array<string>}
     * @memberof JobDetail
     */
    requirements?: Array<string>;
    /**
     * List of responsibilities for the job.
     * @type {Array<string>}
     * @memberof JobDetail
     */
    responsibilities?: Array<string>;
    /**
     * List of benefits for the job.
     * @type {Array<string>}
     * @memberof JobDetail
     */
    benefits?: Array<string>;
    /**
     * List of tags for the job.
     * @type {Array<string>}
     * @memberof JobDetail
     */
    tags?: Array<string>;
    /**
     * The date the job was posted.
     * @type {Date}
     * @memberof JobDetail
     */
    postedAt?: Date;
    /**
     * The deadline for applying for the job.
     * @type {Date}
     * @memberof JobDetail
     */
    applicationDeadline?: Date;
    /**
     * The number of applicants for the job.
     * @type {number}
     * @memberof JobDetail
     */
    applicants?: number;
    /**
     * Whether the job is featured or not.
     * @type {boolean}
     * @memberof JobDetail
     */
    featured?: boolean;
    /**
     * Whether the job is active or not.
     * @type {boolean}
     * @memberof JobDetail
     */
    active?: boolean;
}



/**
 * Check if a given object implements the JobDetail interface.
 */
export function instanceOfJobDetail(value: object): value is JobDetail {
    return true;
}

export function JobDetailFromJSON(json: any): JobDetail {
    return JobDetailFromJSONTyped(json, false);
}

export function JobDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): JobDetail {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'title': json['title'] == null ? undefined : json['title'],
        'company': json['company'] == null ? undefined : json['company'],
        'companyId': json['companyId'] == null ? undefined : json['companyId'],
        'companyLogo': json['companyLogo'] == null ? undefined : json['companyLogo'],
        'location': json['location'] == null ? undefined : json['location'],
        'type': json['type'] == null ? undefined : JobJobTypeFromJSON(json['type']),
        'experienceLevel': json['experienceLevel'] == null ? undefined : JobExperienceLevelFromJSON(json['experienceLevel']),
        'remoteOption': json['remoteOption'] == null ? undefined : JobRemoteOptionFromJSON(json['remoteOption']),
        'salary': json['salary'] == null ? undefined : JobSalaryFromJSON(json['salary']),
        'description': json['description'] == null ? undefined : json['description'],
        'requirements': json['requirements'] == null ? undefined : json['requirements'],
        'responsibilities': json['responsibilities'] == null ? undefined : json['responsibilities'],
        'benefits': json['benefits'] == null ? undefined : json['benefits'],
        'tags': json['tags'] == null ? undefined : json['tags'],
        'postedAt': json['postedAt'] == null ? undefined : (new Date(json['postedAt'])),
        'applicationDeadline': json['applicationDeadline'] == null ? undefined : (new Date(json['applicationDeadline'])),
        'applicants': json['applicants'] == null ? undefined : json['applicants'],
        'featured': json['featured'] == null ? undefined : json['featured'],
        'active': json['active'] == null ? undefined : json['active'],
    };
}

export function JobDetailToJSON(json: any): JobDetail {
    return JobDetailToJSONTyped(json, false);
}

export function JobDetailToJSONTyped(value?: JobDetail | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'title': value['title'],
        'company': value['company'],
        'companyId': value['companyId'],
        'companyLogo': value['companyLogo'],
        'location': value['location'],
        'type': JobJobTypeToJSON(value['type']),
        'experienceLevel': JobExperienceLevelToJSON(value['experienceLevel']),
        'remoteOption': JobRemoteOptionToJSON(value['remoteOption']),
        'salary': JobSalaryToJSON(value['salary']),
        'description': value['description'],
        'requirements': value['requirements'],
        'responsibilities': value['responsibilities'],
        'benefits': value['benefits'],
        'tags': value['tags'],
        'postedAt': value['postedAt'] == null ? undefined : ((value['postedAt']).toISOString()),
        'applicationDeadline': value['applicationDeadline'] == null ? undefined : ((value['applicationDeadline']).toISOString()),
        'applicants': value['applicants'],
        'featured': value['featured'],
        'active': value['active'],
    };
}

