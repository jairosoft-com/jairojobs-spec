openapi: 3.0.0
info:
  title: Job Portal API
  description: API for the JairoJobs.com job portal MVP.
  version: 1.0.0

servers:
  - url: https://api.jairojobs.com/v1
    description: Production Server

paths:
  /jobs:
    get:
      summary: Search and List Jobs
      description: >-
        Retrieves a list of jobs based on search criteria. Supports pagination.
      parameters:
        - name: q
          in: query
          description: Search query for job title, company, etc.
          required: false
          schema:
            type: string
        - name: location
          in: query
          description: Search for jobs by location.
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: The page number to retrieve.
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: The number of jobs to return per page.
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: A paginated list of jobs.
          content:
            application/json:
              schema:
                type: object
                properties:
                  jobs:
                    type: array
                    items:
                      $ref: '#/components/schemas/JobSummary'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '404':
          description: No jobs found matching the criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 404
                message: "No jobs found matching your criteria"

  /jobs/{jobId}:
    get:
      summary: Get Job Details
      description: Retrieves the full details for a specific job posting.
      parameters:
        - name: jobId
          in: path
          description: ID of the job to retrieve.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Detailed information about the job.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDetail'
        '404':
          description: Job not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 404
                message: "Job not found"

components:
  schemas:
    JobSummary:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the job.
        jobTitle:
          type: string
          description: The title of the job.
        companyName:
          type: string
          description: The name of the company posting the job.
        location:
          type: string
          description: The location of the job.
        jobType:
          type: string
          description: The type of employment.
          enum: [full-time, part-time, contract, internship]
        remoteOption:
          type: string
          description: The remote work option.
          enum: [on-site, hybrid, remote]
        postedAt:
          type: string
          format: date-time
          description: The date the job was posted.

    JobDetail:
      allOf:
        - $ref: '#/components/schemas/Job'

    Job:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the job.
          example: '1'
        jobTitle:
          type: string
          description: The title of the job.
          example: 'Senior Full Stack Developer'
        companyName:
          type: string
          description: The name of the company posting the job.
          example: 'TechCorp Solutions'
        companyId:
          type: string
          description: Unique identifier for the company.
          example: '1'
        companyLogo:
          type: string
          format: uri
          description: URL to the company's logo.
          example: '/companies/techcorp.png'
        location:
          type: string
          description: The location of the job.
          example: 'San Francisco, CA'
        jobType:
          type: string
          description: The type of employment.
          enum: [full-time, part-time, contract, internship]
          example: 'full-time'
        experienceLevel:
          type: string
          description: The required experience level.
          enum: [entry, mid, senior]
          example: 'senior'
        remoteOption:
          type: string
          description: The remote work option.
          enum: [on-site, hybrid, remote]
          example: 'hybrid'
        salary:
          type: object
          properties:
            min:
              type: number
              format: float
            max:
              type: number
              format: float
            currency:
              type: string
              example: 'USD'
            period:
              type: string
              example: 'yearly'
        jobDescription:
          type: string
          description: The full description of the job.
        requirements:
          type: array
          items:
            type: string
        responsibilities:
          type: array
          items:
            type: string
        benefits:
          type: array
          items:
            type: string
        tags:
          type: array
          items:
            type: string
        postedAt:
          type: string
          format: date-time
        applicationDeadline:
          type: string
          format: date-time
        applicants:
          type: integer
        featured:
          type: boolean
        active:
          type: boolean

    Pagination:
      type: object
      properties:
        total:
          type: integer
          description: Total number of items.
        page:
          type: integer
          description: Current page number.
        limit:
          type: integer
          description: Items per page.
        totalPages:
          type: integer
          description: Total number of pages.

    Error:
      type: object
      properties:
        code:
          type: integer
          description: HTTP status code.
        message:
          type: string
          description: A human-readable error message.
