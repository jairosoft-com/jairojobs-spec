# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# TypeScript v1 declaration files
typings/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.test
.env.production
.env.local
.env.development

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
public

# Storybook build outputs
.out
.storybook-out

# Temporary folders
tmp/
temp/

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
combined.log
error.log

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.test
.env.production
.env.local

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
public

# Storybook build outputs
.out
.storybook-out

# Temporary folders
tmp/
temp/

# IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Docker
# Note: We want to track Dockerfile and docker-compose files, but ignore runtime data
.docker/
docker-compose.override.yml
docker-compose.prod.yml
docker-compose.dev.yml

# Docker volumes and data
postgres_data/
mysql_data/
redis_data/

# Docker runtime files
.dockerignore.bak
Dockerfile.bak

# Database files
*.sqlite
*.sqlite3
*.db
backup.sql
*.dump

# Uploaded files (will be mounted as volume in Docker)
uploaded_files/
uploads/

# Logs (will be mounted as volume in Docker)
logs/
*.log

# Test files (temporary)
test-service.js
minimal-server.js
test-server.js
simple-test.js
debug.js

# OpenAPI generator files
.openapi-generator/
.openapi-generator-ignore

# Build artifacts
build/
dist/
out/

# Cache directories
.cache/
.parcel-cache/
.next/
.nuxt/

# Environment files
.env*
!.env.example

# Local configuration files
config.local.js
config.dev.js
config.prod.js

# Temporary files
*.tmp
*.temp
*.bak
*.backup

# System files
Thumbs.db
.DS_Store
*.swp
*.swo
*~

# IDE specific files
.vscode/
.idea/
*.sublime-project
*.sublime-workspace

# Backup files
*.orig
*.rej
*.orig.*

# Archive files
*.tar
*.tar.gz
*.zip
*.rar

# Certificate files
*.pem
*.key
*.crt
*.csr

# Docker secrets (if any)
secrets/
*.secret

# Kubernetes files (if using k8s)
k8s/
kubernetes/
*.yaml.bak
*.yml.bak

# Terraform files (if using infrastructure as code)
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl

# Ansible files (if using configuration management)
*.retry

# Local development files
local/
dev/
development/

# Production files
prod/
production/

# Backup directories
backup/
backups/

# Temporary directories
temp/
tmp/
cache/

# Node.js specific
.npmrc
.yarnrc
.yarnrc.yml
package-lock.json.bak
yarn.lock.bak

# TypeScript
*.tsbuildinfo

# ESLint
.eslintcache

# Prettier
.prettierignore

# EditorConfig
.editorconfig

# Git
.git/
.gitignore.bak

# Docker Compose override files (keep main docker-compose.yml)
docker-compose.override.yml
docker-compose.local.yml
docker-compose.dev.yml
docker-compose.prod.yml

# Docker build context
.dockerignore.bak

# Docker volumes (created by docker-compose)
postgres_data/
mysql_data/
redis_data/
mongo_data/

# Docker runtime files
.docker/
docker-runtime/

# Database dumps and backups
*.sql.bak
*.sql.backup
backup_*.sql
dump_*.sql

# Application specific
# These files are created by the application and should not be tracked
combined.log
error.log
access.log
application.log

# Test coverage
coverage/
.nyc_output/
*.lcov

# Build outputs
build/
dist/
out/
.next/
.nuxt/

# Cache
.cache/
.parcel-cache/
.eslintcache

# Temporary files created during development
*.tmp
*.temp
*.log.tmp 