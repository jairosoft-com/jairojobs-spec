/**
 * Artifical Intelligence APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  boolean,
  lazy,
  nullable,
  object,
  optional,
  Schema,
  string,
  unknown,
} from '../schema';
import { CacheControl, cacheControlSchema } from './cacheControl';
import { Source, sourceSchema } from './source';
import { TypeEnum, typeEnumSchema } from './typeEnum';

export interface ContentRequest {
  /** The text content. */
  text?: string;
  /** The type of content. */
  type?: TypeEnum;
  cacheControl?: CacheControl | null;
  /** The image source */
  source?: Source;
  id?: string;
  name?: string;
  input?: unknown;
  toolUseId?: string;
  isError?: boolean;
  content?: string;
}

export const contentRequestSchema: Schema<ContentRequest> = object({
  text: ['text', optional(string())],
  type: ['type', optional(typeEnumSchema)],
  cacheControl: [
    'cache_control',
    optional(nullable(lazy(() => cacheControlSchema))),
  ],
  source: ['source', optional(lazy(() => sourceSchema))],
  id: ['id', optional(string())],
  name: ['name', optional(string())],
  input: ['input', optional(unknown())],
  toolUseId: ['tool_use_id', optional(string())],
  isError: ['is_error', optional(boolean())],
  content: ['content', optional(string())],
});
